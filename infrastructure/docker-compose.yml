services:
  mongodb:
    image: mongo:4.4
    container_name: lingua_mentor_mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_DATABASE: linguamentor
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    healthcheck:
      test: ["CMD", "mongo", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - lingua_mentor_network

  rabbitmq:
    image: rabbitmq:3.13-management
    container_name: lingua_mentor_rabbitmq
    restart: unless-stopped
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: lingua123
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_running"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - lingua_mentor_network

  backend:
    build:
      context: ../backend
      dockerfile: Dockerfile.backend
    container_name: lingua_mentor_backend
    restart: unless-stopped
    env_file:
      - .env
    ports:
      - "8000:8000"
    environment:
      - MONGODB_URL=mongodb://mongodb:27017
      - MONGODB_DB_NAME=linguamentor
      - RABBITMQ_URL=amqp://admin:lingua123@rabbitmq:5672/
    depends_on:
      - rabbitmq
      - mongodb
    command: sh -c "sleep 5 && uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload"
    volumes:
      - ../backend:/app
    networks:
      - lingua_mentor_network

  traefik:
    image: traefik:v2.10
    container_name: lingua_mentor_traefik
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - lingua_mentor_network

volumes:
  mongodb_data:
  rabbitmq_data:

networks:
  lingua_mentor_network:
    driver: bridge
