services:
  mongodb:
    image: mongo:4.4
    container_name: lingua_mentor_mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_DATABASE: linguamentor
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - lingua_mentor_network
    healthcheck:
      test: ["CMD", "mongo", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 10s
      retries: 5

  rabbitmq:
    image: rabbitmq:3.12-management
    container_name: lingua_mentor_rabbitmq
    restart: unless-stopped
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASS}
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 10s
      retries: 5
    networks:
      - lingua_mentor_network

  backend:
    build:
      context: ../backend
      dockerfile: Dockerfile.backend 
    container_name: lingua_mentor_backend
    restart: unless-stopped
    depends_on:
      mongodb:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    command: sh -c "sleep 5 && uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload"
    ports:
      - "8000:8000"
    env_file:
      - ../infrastructure/.env
    networks:
      - lingua_mentor_network
    volumes:
      - ../backend:/app
  
  voice_ai:
    build:
      context: ../backend
      dockerfile: Dockerfile.backend
    container_name: lingua_voice_ai
    restart: on-failure
    depends_on:
      rabbitmq:
        condition: service_healthy
    env_file:
      - ../infrastructure/.env
    command: ["python", "app/services/voice_analysis_ai.py"]
    volumes:
      - ../backend/app/uploads:/app/uploads
    networks:
      - lingua_mentor_network

  evaluation_consumer:
    build:
      context: ../backend
      dockerfile: Dockerfile.backend
    container_name: lingua_evaluation
    restart: on-failure
    depends_on:
      mongodb:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    env_file:
      - ../infrastructure/.env
    command: ["python", "app/services/evaluation_consumer.py"]
    networks:
      - lingua_mentor_network

  traefik:
    image: traefik:v2.10
    container_name: lingua_mentor_traefik
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - lingua_mentor_network

volumes:
  mongodb_data:

networks:
  lingua_mentor_network:
    driver: bridge